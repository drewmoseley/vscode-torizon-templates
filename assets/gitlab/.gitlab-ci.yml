image: docker:latest

services:
    - docker:dind

variables:
  # This should be set by docker image already, just to be sure...
  DOCKER_HOST: tcp://docker:2375
  # Use overlayfs driver for better performance
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 1

stages:
  - setup
  - build
  - platform

initial-setup:
  stage: setup
  image:
    name: torizonextras/xonsh-wrapper:dev

  variables:
    TORIZON_ARCH: ""

  script: |
    echo '

      import os
      import json

      with open(".vscode/settings.json") as f:
          settings = json.load(f)
          os.environ["TORIZON_ARCH"] = settings["torizon_arch"]
          if os.environ["TORIZON_ARCH"] == "aarch64":
              os.environ["TORIZON_ARCH"] = "arm64"
          if os.environ["TORIZON_ARCH"] == "armhf":
              os.environ["TORIZON_ARCH"] = "arm"

      with open(os.environ["GITHUB_ENV"], "a") as f:
          f.write(f"TORIZON_ARCH={os.environ['TORIZON_ARCH']}\n")

      xonsh ./.vscode/tasks.xsh run validate-pipeline-settings

    ' | xonsh-wrapper.xsh

  artifacts:
    reports:
      dotenv: setup.env

build-docker-image:
  needs:
    - initial-setup
  stage: build
  image:
    name: torizonextras/xonsh-wrapper:dev

  variables:
    TASKS_ITERATIVE: "False"
    TASKS_OVERRIDE_ENV: "False"

  script: |
    echo '

      xonsh ./.vscode/tasks.xsh run docker-login
      xonsh ./.vscode/tasks.xsh run run-torizon-binfmt
      xonsh ./.vscode/tasks.xsh run create-production-image

    ' | xonsh-wrapper.xsh

  artifacts:
    paths:
      - docker-compose.prod.yml

push-package-to-platform:
  needs:
    - initial-setup
    - build-docker-image
  stage: platform
  image:
    name: torizonextras/xonsh-wrapper:dev

  variables:
    TASKS_ITERATIVE: "False"
    TASKS_OVERRIDE_ENV: "False"

  script: |
    echo $PLATFORM_CREDENTIALS | base64 -d > credentials.zip
    echo '

      xonsh ./.vscode/tasks.xsh run run-torizon-binfmt
      xonsh ./.vscode/tasks.xsh run tcb-platform-publish

    ' | xonsh-wrapper.xsh

  artifacts:
    paths:
      - docker-compose.prod.yml
      - docker-compose.prod.lock.yml
    when: on_success

# trigger a deployment to the fleet only when pushing to main branch
update-fleet:
  needs:
    - initial-setup
    - push-package-to-platform
  stage: platform
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  image:
    name: torizonextras/xonsh-wrapper:dev

  variables:
    TASKS_ITERATIVE: "False"
    TASKS_OVERRIDE_ENV: "False"

  script: |
    echo $PLATFORM_CREDENTIALS | base64 -d > credentials.zip
    echo '

      xonsh ./.vscode/tasks.xsh run platform-update-fleet

    ' | xonsh-wrapper.xsh
